name: CI
on:
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk
  schedule:
    - cron: "0 0 * * TUE"
jobs:
  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        run: npm ci

      - name: Generate content pages
        run: npm run build

      - name: Webpack build
        run: ./bin/build.sh --production

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/trunk'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
          cname: hyperbo.la
          user_name: lopopolo
          user_email: rjl@hyperbo.la

  js:
    name: Lint and format JS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Nodejs toolchain
        run: npm ci

      - name: Lint and check formatting with eslint
        run: npx eslint .

  shell:
    name: Lint and format shell scripts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Format shell sources with shfmt
        uses: docker://mvdan/shfmt
        with:
          entrypoint: /bin/shfmt
          args: -i 2 -ci -s -d /github/workspace

  text:
    name: Lint and format text
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Lint and check formatting with prettier
        run: npx prettier --check '**/*'

  terraform:
    name: Lint and format terraform
    runs-on: ubuntu-latest
    # https://www.terraform.io/docs/github-actions/getting-started.html
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TF_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.TF_AWS_SECRET_KEY }}
          aws-region: us-west-2

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.x

      - name: "Format aws module"
        run: terraform fmt -check -diff
        working-directory: "terraform/aws"

      - name: "Initialize aws module"
        run: terraform init
        working-directory: "terraform/aws"

      - name: "Validate aws module"
        run: terraform validate -no-color
        working-directory: "terraform/aws"

      - name: "Format legacy module"
        run: terraform fmt -check -diff
        working-directory: "terraform/legacy"

      - name: "Initialize legacy module"
        run: terraform init
        working-directory: "terraform/legacy"

      - name: "Validate legacy module"
        run: terraform validate -no-color
        working-directory: "terraform/legacy"

      - name: "Format remote-state module"
        run: terraform fmt -check -diff
        working-directory: "terraform/legacy"

      - name: "Initialize remote-state module"
        run: terraform init
        working-directory: "terraform/remote-state"

      - name: "Validate remote-state module"
        run: terraform validate -no-color
        working-directory: "terraform/remote-state"

      - name: "Format remote-state module"
        run: terraform fmt -check -diff
        working-directory: "terraform/remote-state"
